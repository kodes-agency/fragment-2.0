/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n        query aboutPage {\n            aboutPage{\n                data {\n                    attributes {\n                        heroHeading\n                        heroSubtext\n                        heroBgImage {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                        stepsHeading\n                        step {\n                            heading\n                            text\n                        }\n                        servicesHeading\n                        servicesSubtext\n                        clientsHeading\n                    }\n                }\n            }\n            services{\n                data {\n                    id\n                    attributes {\n                        title\n                        text\n                    }\n                }\n            }\n            clients(pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        clientLogo {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    ": types.AboutPageDocument,
    "\n        query blogsPage {\n            blogsPage(locale:\"\"){\n                data {\n                    attributes {\n                        heroImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                        heroHeadingBold\n                        heroHeadingItalic\n                        heroSubtext\n                        featuredBlog {\n                            data {\n                                id\n                                attributes {\n                                    title\n                                    thumbnail {\n                                        data {\n                                            attributes {\n                                                url\n                                                formats\n                                                alternativeText\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        blogsHeading\n                        blogsSubtext\n                    }\n                }\n            }\n            blogs(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        publishedAt\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }        \n                    }\n                }\n            }\n        }\n    ": types.BlogsPageDocument,
    "\n        query contactPage {\n            contactPage {\n                data {\n                  attributes {\n                        heroHeading\n                        heroSubtextNormal\n                        heroSubtextItalicBold\n                        contactChannels {\n                            channelName\n                            channelInfo\n                            channelLink\n                        }\n                        spotifyHeading\n                        spotifySubtextNormal\n                        spotifySubtextItalicBold\n                        spotifyLink\n                        contactBgImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    ": types.ContactPageDocument,
    "\n      query homePage {\n        homePage(locale: \"\") {\n          data {\n            attributes {\n              heroHeading\n              heroSubtext\n              workHeading\n              featuredProjects {\n                data {\n                  attributes {\n                    title\n                    client {\n                      data {\n                        attributes {\n                          clientName\n                        }\n                      }\n                    }\n                    category {\n                      data {\n                        attributes {\n                          category\n                        }\n                      }\n                    }\n                    thumbnail {\n                      data {\n                        attributes {\n                          url\n                          alternativeText\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              servicesSubtext\n              servicesImage1 {\n                data {\n                  attributes {\n                    url\n                    alternativeText\n                  }\n                }\n              }\n              servicesImage2 {\n                data {\n                  attributes {\n                    url\n                    alternativeText\n                  }\n                }\n              }\n              blogHeading\n              blogSubtext\n              featuredBlogs {\n                data {\n                  attributes {\n                    slug\n                    title\n                    publishedAt\n                    thumbnail {\n                      data {\n                        attributes {\n                          url\n                          alternativeText\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              contactHeadingBold1\n              contactHeadingBold2\n              contactHeadingItalicBold\n              contactSubtext\n              contactFormSubtext\n            }\n          }\n        }\n      }\n    ": types.HomePageDocument,
    "\n        query layoutQuery {\n            menu(locale:\"\") {\n                data {\n                    attributes {\n                        menuItems {\n                            menuItem\n                        }\n                        scrollDown\n                        letsTalk\n                        browseAll\n                        readFullArticle\n                        subscribeSuccess\n                        subscribeToOurMailing\n                        subscribePlaceholder\n                        moreWork\n                        viewAllBlogs\n                        openCase\n                    }\n                }\n            }\n            contactPage {\n                data {\n                    attributes {\n                        contactChannels {\n                            channelName\n                            channelInfo\n                            channelLink\n                        }\n                    }\n                }\n            }\n        } \n    ": types.LayoutQueryDocument,
    "\n        query projectPage {\n            projects(locale:\"\", filters: {slug: {eq: \"\"}}){\n                data {\n                    attributes {\n                        title\n                        slug\n                        category {\n                            data {\n                                attributes {\n                                    category\n                                }\n                            }\n                        }\n                        client {\n                            data {\n                                attributes {\n                                    clientName\n                                }\n                            }\n                        }\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                }\n                            }\n                        }\n                        layout{\n                            __typename \n                            ...on ComponentProjectLayoutDynamicText {\n                                id\n                                dynamicTitle\n                                dynamicText\n                            }\n                            ...on ComponentProjectLayoutProjectCarousel {\n                                id\n                                images {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutBgImagaNText {\n                                id\n                                title\n                                text\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutBgImageNDynamicText {\n                                id\n                                dynamicText\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutImageNText {\n                                id\n                                text\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutInlineGallery {\n                                id\n                                images {\n                                    data {\n                                        attributes {\n                                            url\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutLargeHeading {\n                                id\n                                heading\n                            }\n                            ...on ComponentProjectLayoutLargeImage {\n                                id\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutParagraph {\n                                id\n                                paragraph\n                            }\n                            ...on ComponentProjectLayoutLargeVideo {\n                                id\n                                video {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutInlineVideos {\n                                id\n                                Videos {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    ": types.ProjectPageDocument,
    "\n        query singleBlogPage {\n            blogs(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        publishedAt\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }        \n                    }\n                }\n            }          \n        }\n    ": types.SingleBlogPageDocument,
    "\n        query singleBlog {\n            blogs(locale:\"\", filters: {slug: {eq: \"\"}}){\n                data {\n                    attributes {\n                        title\n                        slug\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                        author\n                        shortDescription\n                        datePublished\n                        publishedAt\n                        layout {\n                            __typename\n                            ...on ComponentBlogLayoutParagraphContent {\n                                Paragraph\n                            }\n                            ...on ComponentBlogLayoutImage {\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }   \n        }\n    ": types.SingleBlogDocument,
    "\n        query workPage{\n            workPage(locale:\"\"){\n                data {\n                    attributes {\n                        heroHeadingBold1\n                        heroHeadingItalic\n                        heroHeadingBold2\n                        heroSubtext\n                        workHeading\n                        workSubtext\n                        workBackgroundImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            projects(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        category {\n                            data {\n                                attributes {\n                                    category\n                                }\n                            }\n                        }\n                        client {\n                            data {\n                                attributes {\n                                    clientName\n                                }\n                            }\n                        }\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            projectCategories{\n                data {\n                    attributes {\n                        category\n                    }\n                }\n            }\n        }\n    ": types.WorkPageDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query aboutPage {\n            aboutPage{\n                data {\n                    attributes {\n                        heroHeading\n                        heroSubtext\n                        heroBgImage {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                        stepsHeading\n                        step {\n                            heading\n                            text\n                        }\n                        servicesHeading\n                        servicesSubtext\n                        clientsHeading\n                    }\n                }\n            }\n            services{\n                data {\n                    id\n                    attributes {\n                        title\n                        text\n                    }\n                }\n            }\n            clients(pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        clientLogo {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    "): (typeof documents)["\n        query aboutPage {\n            aboutPage{\n                data {\n                    attributes {\n                        heroHeading\n                        heroSubtext\n                        heroBgImage {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                        stepsHeading\n                        step {\n                            heading\n                            text\n                        }\n                        servicesHeading\n                        servicesSubtext\n                        clientsHeading\n                    }\n                }\n            }\n            services{\n                data {\n                    id\n                    attributes {\n                        title\n                        text\n                    }\n                }\n            }\n            clients(pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        clientLogo {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query blogsPage {\n            blogsPage(locale:\"\"){\n                data {\n                    attributes {\n                        heroImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                        heroHeadingBold\n                        heroHeadingItalic\n                        heroSubtext\n                        featuredBlog {\n                            data {\n                                id\n                                attributes {\n                                    title\n                                    thumbnail {\n                                        data {\n                                            attributes {\n                                                url\n                                                formats\n                                                alternativeText\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        blogsHeading\n                        blogsSubtext\n                    }\n                }\n            }\n            blogs(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        publishedAt\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }        \n                    }\n                }\n            }\n        }\n    "): (typeof documents)["\n        query blogsPage {\n            blogsPage(locale:\"\"){\n                data {\n                    attributes {\n                        heroImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                        heroHeadingBold\n                        heroHeadingItalic\n                        heroSubtext\n                        featuredBlog {\n                            data {\n                                id\n                                attributes {\n                                    title\n                                    thumbnail {\n                                        data {\n                                            attributes {\n                                                url\n                                                formats\n                                                alternativeText\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        blogsHeading\n                        blogsSubtext\n                    }\n                }\n            }\n            blogs(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        publishedAt\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }        \n                    }\n                }\n            }\n        }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query contactPage {\n            contactPage {\n                data {\n                  attributes {\n                        heroHeading\n                        heroSubtextNormal\n                        heroSubtextItalicBold\n                        contactChannels {\n                            channelName\n                            channelInfo\n                            channelLink\n                        }\n                        spotifyHeading\n                        spotifySubtextNormal\n                        spotifySubtextItalicBold\n                        spotifyLink\n                        contactBgImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    "): (typeof documents)["\n        query contactPage {\n            contactPage {\n                data {\n                  attributes {\n                        heroHeading\n                        heroSubtextNormal\n                        heroSubtextItalicBold\n                        contactChannels {\n                            channelName\n                            channelInfo\n                            channelLink\n                        }\n                        spotifyHeading\n                        spotifySubtextNormal\n                        spotifySubtextItalicBold\n                        spotifyLink\n                        contactBgImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n      query homePage {\n        homePage(locale: \"\") {\n          data {\n            attributes {\n              heroHeading\n              heroSubtext\n              workHeading\n              featuredProjects {\n                data {\n                  attributes {\n                    title\n                    client {\n                      data {\n                        attributes {\n                          clientName\n                        }\n                      }\n                    }\n                    category {\n                      data {\n                        attributes {\n                          category\n                        }\n                      }\n                    }\n                    thumbnail {\n                      data {\n                        attributes {\n                          url\n                          alternativeText\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              servicesSubtext\n              servicesImage1 {\n                data {\n                  attributes {\n                    url\n                    alternativeText\n                  }\n                }\n              }\n              servicesImage2 {\n                data {\n                  attributes {\n                    url\n                    alternativeText\n                  }\n                }\n              }\n              blogHeading\n              blogSubtext\n              featuredBlogs {\n                data {\n                  attributes {\n                    slug\n                    title\n                    publishedAt\n                    thumbnail {\n                      data {\n                        attributes {\n                          url\n                          alternativeText\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              contactHeadingBold1\n              contactHeadingBold2\n              contactHeadingItalicBold\n              contactSubtext\n              contactFormSubtext\n            }\n          }\n        }\n      }\n    "): (typeof documents)["\n      query homePage {\n        homePage(locale: \"\") {\n          data {\n            attributes {\n              heroHeading\n              heroSubtext\n              workHeading\n              featuredProjects {\n                data {\n                  attributes {\n                    title\n                    client {\n                      data {\n                        attributes {\n                          clientName\n                        }\n                      }\n                    }\n                    category {\n                      data {\n                        attributes {\n                          category\n                        }\n                      }\n                    }\n                    thumbnail {\n                      data {\n                        attributes {\n                          url\n                          alternativeText\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              servicesSubtext\n              servicesImage1 {\n                data {\n                  attributes {\n                    url\n                    alternativeText\n                  }\n                }\n              }\n              servicesImage2 {\n                data {\n                  attributes {\n                    url\n                    alternativeText\n                  }\n                }\n              }\n              blogHeading\n              blogSubtext\n              featuredBlogs {\n                data {\n                  attributes {\n                    slug\n                    title\n                    publishedAt\n                    thumbnail {\n                      data {\n                        attributes {\n                          url\n                          alternativeText\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              contactHeadingBold1\n              contactHeadingBold2\n              contactHeadingItalicBold\n              contactSubtext\n              contactFormSubtext\n            }\n          }\n        }\n      }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query layoutQuery {\n            menu(locale:\"\") {\n                data {\n                    attributes {\n                        menuItems {\n                            menuItem\n                        }\n                        scrollDown\n                        letsTalk\n                        browseAll\n                        readFullArticle\n                        subscribeSuccess\n                        subscribeToOurMailing\n                        subscribePlaceholder\n                        moreWork\n                        viewAllBlogs\n                        openCase\n                    }\n                }\n            }\n            contactPage {\n                data {\n                    attributes {\n                        contactChannels {\n                            channelName\n                            channelInfo\n                            channelLink\n                        }\n                    }\n                }\n            }\n        } \n    "): (typeof documents)["\n        query layoutQuery {\n            menu(locale:\"\") {\n                data {\n                    attributes {\n                        menuItems {\n                            menuItem\n                        }\n                        scrollDown\n                        letsTalk\n                        browseAll\n                        readFullArticle\n                        subscribeSuccess\n                        subscribeToOurMailing\n                        subscribePlaceholder\n                        moreWork\n                        viewAllBlogs\n                        openCase\n                    }\n                }\n            }\n            contactPage {\n                data {\n                    attributes {\n                        contactChannels {\n                            channelName\n                            channelInfo\n                            channelLink\n                        }\n                    }\n                }\n            }\n        } \n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query projectPage {\n            projects(locale:\"\", filters: {slug: {eq: \"\"}}){\n                data {\n                    attributes {\n                        title\n                        slug\n                        category {\n                            data {\n                                attributes {\n                                    category\n                                }\n                            }\n                        }\n                        client {\n                            data {\n                                attributes {\n                                    clientName\n                                }\n                            }\n                        }\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                }\n                            }\n                        }\n                        layout{\n                            __typename \n                            ...on ComponentProjectLayoutDynamicText {\n                                id\n                                dynamicTitle\n                                dynamicText\n                            }\n                            ...on ComponentProjectLayoutProjectCarousel {\n                                id\n                                images {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutBgImagaNText {\n                                id\n                                title\n                                text\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutBgImageNDynamicText {\n                                id\n                                dynamicText\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutImageNText {\n                                id\n                                text\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutInlineGallery {\n                                id\n                                images {\n                                    data {\n                                        attributes {\n                                            url\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutLargeHeading {\n                                id\n                                heading\n                            }\n                            ...on ComponentProjectLayoutLargeImage {\n                                id\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutParagraph {\n                                id\n                                paragraph\n                            }\n                            ...on ComponentProjectLayoutLargeVideo {\n                                id\n                                video {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutInlineVideos {\n                                id\n                                Videos {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    "): (typeof documents)["\n        query projectPage {\n            projects(locale:\"\", filters: {slug: {eq: \"\"}}){\n                data {\n                    attributes {\n                        title\n                        slug\n                        category {\n                            data {\n                                attributes {\n                                    category\n                                }\n                            }\n                        }\n                        client {\n                            data {\n                                attributes {\n                                    clientName\n                                }\n                            }\n                        }\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                }\n                            }\n                        }\n                        layout{\n                            __typename \n                            ...on ComponentProjectLayoutDynamicText {\n                                id\n                                dynamicTitle\n                                dynamicText\n                            }\n                            ...on ComponentProjectLayoutProjectCarousel {\n                                id\n                                images {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutBgImagaNText {\n                                id\n                                title\n                                text\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutBgImageNDynamicText {\n                                id\n                                dynamicText\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutImageNText {\n                                id\n                                text\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutInlineGallery {\n                                id\n                                images {\n                                    data {\n                                        attributes {\n                                            url\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutLargeHeading {\n                                id\n                                heading\n                            }\n                            ...on ComponentProjectLayoutLargeImage {\n                                id\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutParagraph {\n                                id\n                                paragraph\n                            }\n                            ...on ComponentProjectLayoutLargeVideo {\n                                id\n                                video {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                            ...on ComponentProjectLayoutInlineVideos {\n                                id\n                                Videos {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query singleBlogPage {\n            blogs(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        publishedAt\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }        \n                    }\n                }\n            }          \n        }\n    "): (typeof documents)["\n        query singleBlogPage {\n            blogs(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        publishedAt\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }        \n                    }\n                }\n            }          \n        }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query singleBlog {\n            blogs(locale:\"\", filters: {slug: {eq: \"\"}}){\n                data {\n                    attributes {\n                        title\n                        slug\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                        author\n                        shortDescription\n                        datePublished\n                        publishedAt\n                        layout {\n                            __typename\n                            ...on ComponentBlogLayoutParagraphContent {\n                                Paragraph\n                            }\n                            ...on ComponentBlogLayoutImage {\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }   \n        }\n    "): (typeof documents)["\n        query singleBlog {\n            blogs(locale:\"\", filters: {slug: {eq: \"\"}}){\n                data {\n                    attributes {\n                        title\n                        slug\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                        author\n                        shortDescription\n                        datePublished\n                        publishedAt\n                        layout {\n                            __typename\n                            ...on ComponentBlogLayoutParagraphContent {\n                                Paragraph\n                            }\n                            ...on ComponentBlogLayoutImage {\n                                image {\n                                    data {\n                                        attributes {\n                                            url\n                                            formats\n                                            alternativeText\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }   \n        }\n    "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n        query workPage{\n            workPage(locale:\"\"){\n                data {\n                    attributes {\n                        heroHeadingBold1\n                        heroHeadingItalic\n                        heroHeadingBold2\n                        heroSubtext\n                        workHeading\n                        workSubtext\n                        workBackgroundImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            projects(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        category {\n                            data {\n                                attributes {\n                                    category\n                                }\n                            }\n                        }\n                        client {\n                            data {\n                                attributes {\n                                    clientName\n                                }\n                            }\n                        }\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            projectCategories{\n                data {\n                    attributes {\n                        category\n                    }\n                }\n            }\n        }\n    "): (typeof documents)["\n        query workPage{\n            workPage(locale:\"\"){\n                data {\n                    attributes {\n                        heroHeadingBold1\n                        heroHeadingItalic\n                        heroHeadingBold2\n                        heroSubtext\n                        workHeading\n                        workSubtext\n                        workBackgroundImage {\n                            data {\n                                attributes {\n                                    url\n                                    alternativeText\n                                    formats\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            projects(locale:\"\", pagination: { page: 1, pageSize: 100 }){\n                data {\n                    attributes {\n                        slug\n                        title\n                        category {\n                            data {\n                                attributes {\n                                    category\n                                }\n                            }\n                        }\n                        client {\n                            data {\n                                attributes {\n                                    clientName\n                                }\n                            }\n                        }\n                        thumbnail {\n                            data {\n                                attributes {\n                                    url\n                                    formats\n                                    alternativeText\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            projectCategories{\n                data {\n                    attributes {\n                        category\n                    }\n                }\n            }\n        }\n    "];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;